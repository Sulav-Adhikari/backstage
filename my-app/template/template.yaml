apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: npx-template # name of the template
  title: NPX_Application 
  description: Create a NPX application
  tags: # you can configure tags for the service
    - recommended
    - npx
    - microservice
    - react
    
spec:
  owner: user:guest
  type: service
  
  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Provide some simple information
      required:
        - name
        - package
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        package:
          title: Package
          type: string
          description: Package name
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com    
# here are the steps that are executed in series in the scaffolder backend
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./template
        values:
          name: ${{ parameters.name }}
          package: ${{ parameters.package }}
          
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    remoteUrl: ${{ steps.publish.output.remoteUrl }}
    entityRef: ${{ steps.register.output.entityRef }}